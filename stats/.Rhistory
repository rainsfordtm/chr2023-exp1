geom_bar(  # histogram
stat="identity", # raw data
color=df$stat, # split by stat
position="dodge" # bars next to each other
)
return(qwe)
}
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",])
plot.precision.recall <- function(df) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value)
) +
geom_bar(  # histogram
stat="identity", # raw data
group=df$stat, # split by stat
position="dodge" # bars next to each other
)
return(qwe)
}
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",])
plot.precision.recall <- function(df) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
)
return(qwe)
}
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",])
plot.precision.recall <- function(df) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",])
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label="value")
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=df$value)
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(df$value, digits=3))
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(df$value, digits=3)), # use values and round to 3sf.
position="dodge"
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=3)), # use values and round to 3sf.
position_dodge(width="2"),
position="dodge"
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=3)), # use values and round to 3sf.
position=position_dodge(width=2)
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=3)), # use values and round to 3sf.
position=position_dodge(width=1)
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=value), # use values and round to 3sf.
position=position_dodge(width=1), # dodge like the bars
digits=3, # three digits
vjust=0.25 # move up a bit
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=3)), # use values and round to 3sf.
position=position_dodge(width=1), # dodge like the bars
vjust=0.3 # move up a bit
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=0.3 # move up a bit
) +
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=0.5 # move up a bit
) +
ylim(0.5, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=0.5 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=1 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=-1 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=-0.5 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=-0.25 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=-0.25 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Presence of direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall(pr.all[pr.all$phenomenon == "reflexive_parser",], "Reflexives")
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=-0.25 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Has direct object")
plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
plot.precision.recall(pr.all[pr.all$phenomenon == "reflexive_parser",], "Reflexive")
plot.precision.recall(pr.all[pr.all$phenomenon == "en_clitic_parser",], "Has 'en' clitic")
library(ggplot2, cowplot)
plot.precision.recall <- function(df, title) {
qwe <- ggplot( # Set up plot
data = df, # Data from data frame
mapping = aes(parser.model, value, fill=stat)
) +
geom_bar(  # histogram
stat="identity", # raw data
position="dodge" # bars next to each other
) +
geom_text( # Add values
aes(label=round(value, digits=4)), # use values and round to 4sf.
position=position_dodge(width=1), # dodge like the bars
vjust=-0.25 # move up a bit
) +
ylim(0, 1) + # Scale from 0.5 to 1
theme_minimal() + # Basic theme
labs(title=title)
return(qwe)
}
# Relevel to make hops-sequoia-expert first in the list
pr.all$parser.model <- relevel(pr.all$parser.model, "hops-sequoia-expert")
# Plot
x1 <- plot.precision.recall(pr.all[pr.all$phenomenon == "obj_acc_parser",], "Has direct object")
x2 <- plot.precision.recall(pr.all[pr.all$phenomenon == "loc_parser",], "Locatives")
x3 <- plot.precision.recall(pr.all[pr.all$phenomenon == "reflexive_parser",], "Reflexive")
x4 <- plot.precision.recall(pr.all[pr.all$phenomenon == "en_clitic_parser",], "Has 'en' clitic")
plot_grid(
x1, x2, x3, x4,
ncol=2,
nrow=2
)
library(cowplot)
plot_grid(
x1, x2, x3, x4,
ncol=2,
nrow=2
)
